using System;
using System.Collections.Generic;
using System.Linq;
using System.Data;
using System.Web;
using makelanlan;
namespace WebApplication
{
    public class Function
    {
        /// <summary>
        /// 获取客户code，Code= CalKFcode()
        /// </summary>
        /// <returns></returns>
        public static string CalKFcode()
        {
            string maxV = string.Empty;
            string sql = "select code from ClientService_kfku where id = " +
                " (select max(id) from ClientService_kfku where code <> '' ) ";
            DataTable tb = DBLL.ExecuteDataTable(BLL.数据库.默认数据库, sql);
            if (tb.Rows.Count <= 0)
            {
                maxV = "1";
            }
            else
            {
                maxV = (Convert.ToInt32(tb.Rows[0]["code"].ToString()) + 1).ToString();
            }
            return maxV;
        }
        /// <summary>
        ///
        /// 附近客户(全局变量范围内可见) | 最近客户（radius半径缩小即可）
        /// type  1:访问时间越久远的越靠前 搜索范围由全局变量DIS而定
        ///       2:距离越近越靠前  默认搜索范围由全局变量RADIUS而定，可调整radius
        ///       默认为 1
        /// </summary>
        /// <param name="longitude">当前位置 经度</param>
        /// <param name="latitude">当前位置 纬度</param>
        /// <param name="type">type 排序类型默认是第一种</param>
        /// <param name="radius">搜索范围 单位：千米（大于0），默认就是全局变量,</param>
        /// <returns></returns>
        public static DataTable NeighbourPosition(double longitude, double latitude,int type=1,double radius=-1)
        {
            //先计算查询点的经纬度范围
            double r = 6371;//地球半径千米
            double dis;
            if (type==1)
            {
                dis = MyGlobal.DIS;
            }
            else
            {
                if (radius<=0)
                {
                    dis = MyGlobal.RADIUS;
                }
                else
                {
                    dis = radius;
                }
            }
            double dlng = 2 * Math.Asin(Math.Sin(dis / (2 * r)) / Math.Cos(latitude * Math.PI / 180));
            dlng = dlng * 180 / Math.PI;//角度转为弧度
            double dlat = dis / r;
            dlat = dlat * 180 / Math.PI;
            double minlat = latitude - dlat;
            double maxlat = latitude + dlat;
            double minlng = longitude - dlng;
            double maxlng = longitude + dlng;
            String sql = " select top " + MyGlobal.TOPCOUNT + " cc.*,dd.introducerDate,dd.BillMan,dd.NotePre from( " +
                " select name,contactor,phone,zf29,zf30 from  ClientService_kfku where zf29 between '" + minlng.ToString() + "'  and '" + maxlng.ToString() + "'  " +
                "  and  zf30 between '" + minlat.ToString() + "'  and '" + maxlat.ToString() + "' " +
                "  group by  name,contactor,phone,zf29,zf30  " +
                " union all" +
                " select name,contactor,phone,zf29,zf30 from kfku where zf29 between '" + minlng.ToString() + "'  and '" + maxlng.ToString() + "'  " +
                "  and  zf30 between '" + minlat.ToString() + "'  and '" + maxlat.ToString() + "' " +
                "  and name not in (select name from ClientService_kfku)" +
                "  group by  name,contactor,phone,zf29,zf30 " +
                " ) as cc " +
                " left join" +
                " (select * from clientservice_VisitBill a where not exists(select 1 from clientservice_VisitBill b where b.Client = a.Client and b.id > a.id) )" +
                " as dd" +
                " on dd.Client = cc.NAME ";
            if (type == 1)
            {
                sql += " order by introducerDate ";//相隔时间久的排名靠前
            }
            DataTable tb = DBLL.ExecuteDataTable(BLL.数据库.默认数据库, sql);

            if (type == 2)
            {
                int len = tb.Rows.Count;
                int i = 0, j = 0;
                for (i = 0; i < len - 1; i++)
                {
                    for (j = 0; j < len - i - 1; j++)
                    {
                        double disj = ScueFun.LngLatDis.GetDistance(longitude, latitude, Convert.ToDouble(tb.Rows[j]["ZF29"].ToString()), Convert.ToDouble(tb.Rows[j]["ZF30"].ToString()));
                        double disj_1 = ScueFun.LngLatDis.GetDistance(longitude, latitude, Convert.ToDouble(tb.Rows[j + 1]["ZF29"].ToString()), Convert.ToDouble(tb.Rows[j + 1]["ZF30"].ToString()));
                        if (disj > disj_1)
                        {
                            DataRow dr = tb.NewRow();
                            dr.ItemArray = tb.Rows[j].ItemArray;//暂存
                            tb.Rows[j].ItemArray = tb.Rows[j + 1].ItemArray;
                            tb.Rows[j + 1].ItemArray = dr.ItemArray;
                        }
                    }
                }
            }    
            return tb;
        }
    }
}