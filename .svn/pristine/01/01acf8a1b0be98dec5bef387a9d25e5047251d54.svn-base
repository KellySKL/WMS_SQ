using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Services;
using makelanlan;
namespace WebApplication
{
    /// <summary>
    /// YewuService 的摘要说明
    /// </summary>
    [WebService(Namespace = "http://tempuri.org/")]
    [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
    [System.ComponentModel.ToolboxItem(false)]
    // 若要允许使用 ASP.NET AJAX 从脚本中调用此 Web 服务，请取消注释以下行。 
    [System.Web.Script.Services.ScriptService]
    public class YewuService : System.Web.Services.WebService
    {
        [WebMethod]
        public string HelloWorld()
        {
            return "Hello World";
        }
        [WebMethod(EnableSession = true)]
        //int client_id, 
        public string GetKFLoc(string client)
        {
            //获取客户位置
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return "NoCookies";
            }
            return KFLocation.Get(client);
        }

        /// <summary>
        /// 新建客户拜访
        /// </summary>
        [WebMethod(EnableSession = true)]
        public int NewVisit(string userId, string client,string zf2, string billtype,string date, string hisname,
            string hisposition,string hisphone,string content,string userName,double lng1,double lat1,
            string nextTime,string nextMethod,string nextNotice,string saleContent,string IfWX)
        {
            MLogin.GetExeUname();
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return 10;//用户验证失败
            }
            int flag = 0;//默认为0
            string position = KFLocation.Get(client);
            double lng, lat;
            if (position == "")//该客户没有定位，将现在这个位置赋值给当前客户
            {
               flag = -1;
               return flag;
            }
            else if (position == "none")//不存在该用户
            {
                flag = -2;
                return flag;
            }
            string[] strs_kf = position.Split(',');
            lng = Convert.ToDouble(strs_kf[0]);
            lat = Convert.ToDouble(strs_kf[1]);

            #region 数据库获取定位
            //string userpoi = UserLocation.Get(userId);
            //
            //if (userpoi == "")
            //{
            //    flag = -2;
            //    return flag;//用户无定位信息
            //}
            //string[] poi = userpoi.Split(':');
            //lng1 = Convert.ToDouble(poi[0]);
            //lat1 = Convert.ToDouble(poi[1]);
            #endregion

            if (ScueFun.LngLatDis.GetDistance(lng, lat, lng1, lat1) > MyGlobal.VISITAERA)
            {
                flag = 5;
                return flag;//超出范围不能提交
            }

            clientservice_VisitBill bill = new clientservice_VisitBill();
            kfku m = new kfku();
            string lev = string.Empty;
            int day = 0;
            List<kfku> ms = m.Select(" and NAME='" + client + "'  order by id desc  ");
            if (ms.Count > 0)
            {
                if(ms[0].TRADETYPENAME!=null&& ms[0].LEV!=null)
                {
                    bill.ZF1 = ms[0].TRADETYPENAME.ToString();
                    lev = ms[0].LEV;
                }
            }
            else
            {
                ClientService_kfku k = new ClientService_kfku();
                List<ClientService_kfku> ks = k.Select(" and NAME='" + client + "'   order by id desc   ");
                if (ks.Count > 0)
                {
                    if (ks[0].TRADETYPENAME != null&& ks[0].LEV!=null)
                    {
                        bill.ZF1 = ks[0].TRADETYPENAME.ToString();
                        lev = ks[0].LEV;
                        //if (ks[0].TRADETYPENAME== "新建客户"&& ks[0].CONTACTOR==null&& ks[0].PHONE==null)
                        //{
                        //    k.CONTACTOR = hisname;
                        //    k.PHONE = hisphone;
                        //    k.Updata(" and id=" + ks[0].ID);
                        //}
                    }
                } 
            }
            if (lev.Contains("1级"))
            {
                day = 150;
            }
            else if (lev.Contains("2级"))
            {
                day = 100;
            }
            else if (lev.Contains("3级"))
            {
                day = 60;
            }
            else if (lev.Contains("4级"))
            {
                day = 30;
            }
            else if (lev.Contains("5级"))
            {
                day = 7;
            }
            else
            {
                day = 0;
            }
            bill.CODE = ScueFun.Code.BasicCode();
            bill.CLIENT = client;
            bill.BILLDATE = Convert.ToDateTime(date);
            bill.BILLMAN = userName;
            bill.NOTEPRE = content;
            bill.ZF2 = zf2;
            bill.BILLTYPE = billtype;
            bill.INTRODUCERDATE = SysTime.GetTime;
            bill.FINISHDATE = SysTime.GetTime;
            bill.ZF3 = hisname;//存放对方信息
            bill.ZF4 = hisposition;
            bill.ZF5 = hisphone;
            //获取当前日期和时间
            DateTime now = System.DateTime.Now;
            //增加天
            DateTime dt1 = now.AddDays(day);
            if (nextTime == "默认")
            {
                bill.ZF6 = dt1.ToString("yyyy-MM-dd");
            }
            else
            {
                bill.ZF6 = nextTime;
            }
            bill.ZF7 = IfWX;//是否需要维修
            bill.ZF8 = nextNotice;
            bill.ZF9 = nextMethod;
            bill.ZF10 = saleContent;
            string[] strs = Function.StayTime(userId, lng1,lat1,client);
            bill.ZF11 = strs[0] == null ? "" : strs[0];//开始时间
            bill.ZF12 = strs[0] == null ? "" : strs[1];//结束时间
            bill.ZF13 = strs[0] == null ? "" : strs[2];//时间间隔
            bill.INTRODUCER = userName;

            L_VisitSend s = new L_VisitSend();
            string today_1 = System.DateTime.Now.ToString("yyyy-MM-dd 00:00:00");
            string today = System.DateTime.Now.ToString("yyyy-MM-dd 23:59:59");
            List<L_VisitSend> list = s.Select(" and GETUSER='" + userName + "'  and  VISITDATE between '" + today_1 + "'  and '" + today + "'  and state=7  and VISITCLIENT='" + client + "'  ");
            string refer = string.Empty;
            foreach (L_VisitSend i in list)
            {
                L_VisitSend vs = new L_VisitSend();
                vs.STATE = 10;
                vs.Updata(" and id=" + i.ID);
                refer = i.CODE;
            }

            ClientService_kfku km = new ClientService_kfku();
            km.ZF33 = bill.CODE;//关联单据号
            km.RQ1 = Convert.ToDateTime(bill.ZF6 + " 00:00:00");//string格式有要求，必须是yyyy-MM-dd hh: mm: ss
            km.Updata(" and NAME='" + client + "' ");

            bill.REFERCODE = refer;
            bill.Insert();
            return flag;
        }
        [WebMethod(EnableSession = true)]
        public List<VisitBill> HisVisit(string userName)
        {
            MLogin.GetExeUname();
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return null;
            }
            clientservice_VisitBill bills = new clientservice_VisitBill();
            List<clientservice_VisitBill> list= bills.Select(" and billman='"+ userName + "' order by id desc ", " top 20 client,billdate,notepre,code");
            List<VisitBill> history = new List<VisitBill>();
            foreach (clientservice_VisitBill c in list)
            {
                VisitBill b = new VisitBill();
                b.code = c.CODE;
                b.client = c.CLIENT;
                b.date = c.BILLDATE.ToString("yyyy-MM-dd");
                b.content = c.NOTEPRE;
                history.Add(b);
            }
            return history;
        }
        [WebMethod(EnableSession = true)]
        public void EditVisit(string code,string content)
        {
            MLogin.GetExeUname();
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return;
            }
            clientservice_VisitBill bills = new clientservice_VisitBill();
            List<clientservice_VisitBill> list = bills.Select(" and  code='"+ code + "'");
            if (list.Count > 0)
            {
                clientservice_VisitBill bill = list[0];
                bill.Reset_clientservice_VisitBill();
                bill.NOTEPRE = content;
                bill.FINISHDATE= SysTime.GetTime;
                bill.Updata(" and code='"+ code + "' ");
                
            }
        }


    }
}
