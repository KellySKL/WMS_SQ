using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Services;
using makelanlan;
using System.Data;
namespace WebApplication
{
    /// <summary>
    /// AccountService 的摘要说明
    /// </summary>
    [WebService(Namespace = "http://tempuri.org/")]
    [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
    [System.ComponentModel.ToolboxItem(false)]
    // 若要允许使用 ASP.NET AJAX 从脚本中调用此 Web 服务，请取消注释以下行。 
    [System.Web.Script.Services.ScriptService]
    public class AccountService : System.Web.Services.WebService
    {

        [WebMethod]
        public string HelloWorld()
        {
            return "Hello World";
        }

        [WebMethod(EnableSession = true)]
        public void AccountFee(string userName, string client, string code,string eating,string other,string person,
            string traffic,string commission,string remark,string hisname, string hisphone, string note)
        {
            TreatFee t = new TreatFee();
            t.BILLCODE = ScueFun.Code.BasicCode("TreatFee", "BILLCODE", "TF");
            t.CLIENT = client;
            t.VBCODE = code;//拜访单单号
            t.BILLMAN = userName;
            t.EATING = eating;
            t.OTHER = other;
            t.PERSON = person;

            t.NAME = hisname;
            t.PHONE = hisphone;
            t.NOTE = note;

            t.TRAFFIC = traffic;
            t.COMMISSION = commission;//佣金申请
            t.BLANK_STR_1 = remark;//备注，说明
            t.CREATETIME = SysTime.GetTime.ToString("yyyy-MM-dd HH:mm:ss");
            t.STATE = 0;//已提交
            t.Insert();
        }

        [WebMethod(EnableSession = true)]
        public List<FeeBill> FeeBills(string userName)
        {
            List<FeeBill> bills = new List<FeeBill>();
            TreatFee t = new TreatFee();
            List<TreatFee> list =  t.Select(" and BILLMAN='"+ userName + "' order by id desc ");
            foreach (TreatFee tf in list)
            {
                FeeBill bill = new FeeBill();
                bill.billcode = tf.BILLCODE;
                bill.billman = tf.BILLMAN;
                bill.createtime = tf.CREATETIME;
                bill.state = tf.STATE;
                if (bill.state == 0)
                {
                    bill.state_desc = "未审核";
                }
                else if (bill.state == 10)
                {
                    bill.state_desc = "审核通过";
                }
                else if (bill.state == -1)
                {
                    bill.state_desc = "审核失败";
                }
                bill.vbcode= tf.VBCODE;
                bill.client = tf.CLIENT;
                bill.eating = tf.EATING;
                bill.other = tf.OTHER;
                bill.person = tf.PERSON;
                bill.traffic = tf.TRAFFIC;
                bill.commission = tf.COMMISSION;
                bill.remark = tf.BLANK_STR_1;
                bill.opinion= tf.BLANK_STR_2;
                bills.Add(bill);
            }
            return bills;
        }

        [WebMethod(EnableSession = true)]
        public List<FeeBill> BillsState0(string  userName)
        {
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return null;//身份验证失败
            }

            List<FeeBill> bills = new List<FeeBill>();
            TreatFee t = new TreatFee();
            List<TreatFee> list = t.Select(" and STATE=0  order by id desc ");
            foreach (TreatFee tf in list)
            {
                FeeBill bill = new FeeBill();
                bill.billcode = tf.BILLCODE;
                bill.billman = tf.BILLMAN;
                bill.createtime = tf.CREATETIME;
                bill.state = tf.STATE;
                if (bill.state == 0)
                {
                    bill.state_desc = "未审核";
                }
                else if (bill.state == 10)
                {
                    bill.state_desc = "审核通过";
                }
                else if (bill.state == -1)
                {
                    bill.state_desc = "审核失败";
                }
                bill.vbcode = tf.VBCODE;
                bill.client = tf.CLIENT;
                bill.eating = tf.EATING;
                bill.other = tf.OTHER;
                bill.person = tf.PERSON;
                bill.traffic = tf.TRAFFIC;
                bill.commission = tf.COMMISSION;
                bill.remark = tf.BLANK_STR_1;
                bills.Add(bill);
            }
            return bills;
        }

        [WebMethod(EnableSession = true)]
        public bool AuditBills(string userName,string billcode,string opinion,string type)
        {
            bool flag = false;
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return flag;//身份验证失败
            }
            TreatFee t = new TreatFee();
            if (type == "YES")
            {
                if (opinion.Trim() == "")
                {
                    t.BLANK_STR_2 = "同意！";
                }
                t.STATE = 10;//审核成功
            }
            else
            {
                t.STATE = -1;//审核失败
                t.BLANK_STR_2 = opinion;//审核意见
            }
            t.AUDITDATE = System.DateTime.Now.ToString();//审核时间
            t.BLANK_STR_3 = userName;//审核人名字
            t.Updata("  and BILLCODE='" + billcode + "'  ");
            flag = true;
            return flag;
        }


        [WebMethod(EnableSession = true)]
        public List<VisitBill> GetBills(string userName)
        {
            string cookies = HttpContext.Current.Request.Cookies["guid"] == null ? "" : HttpContext.Current.Request.Cookies["guid"].Value as string;
            string session = Session.SessionID.ToString();
            if (!cookies.Equals(session))
            {
                return null;//身份验证失败
            }
            List<VisitBill> result = new List<VisitBill>();
            string date  = DateTime.Now.Date.ToString();
            clientservice_VisitBill bills = new clientservice_VisitBill();
            List<clientservice_VisitBill> list = bills.Select(" and billman='" + userName + "' and  BILLDATE='"+ date + "'  ", " client,billdate,notepre,code,zf3,zf4,zf5 ");//公司、拜访时间、内容、单号、名字、职位、电话
            foreach (clientservice_VisitBill b in list)
            {
                VisitBill v = new VisitBill();
                v.client = b.CLIENT;
                v.code = b.CODE;
                v.content = b.NOTEPRE;
                v.date = b.BILLDATE.ToString("yyyy-MM-dd");
                v.hisname = b.ZF3;
                v.hisposition = b.ZF4;
                v.hisphone = b.ZF5;
                result.Add(v);
            }
            return result;
        }

        /// <summary>
        /// 分页请求
        /// </summary>
        /// <param name="userName"></param>
        /// <returns></returns>
        [WebMethod(EnableSession = true)]
        public List<FeeBill> MyFeeBills(string userName,int curPage)
        {
           // P_MyBill result = new P_MyBill();
            int num = curPage*10;
           // curPage++;
            string sql = " select top 10 o.* from( " +
             " select row_number() over(order by id desc) as rownumber, a.* from( " +
             " select * from TreatFee where BILLMAN = '" + userName + "' ) as a) as o where rownumber > "+num.ToString();
            DataTable dt = DBLL.ExecuteDataTable(BLL.数据库.默认数据库, sql);

            List<FeeBill> bills = new List<FeeBill>(); 

            foreach (DataRow row in dt.Rows)
            {
                FeeBill bill = new FeeBill();
                bill.billcode = row["BILLCODE"].ToString();
                bill.billman = row["BILLMAN"].ToString();
                bill.createtime = row["CREATETIME"].ToString();
                bill.state = Convert.ToInt16(row["STATE"].ToString());
                if (bill.state == 0)
                {
                    bill.state_desc = "未审核";
                }
                else if (bill.state == 10)
                {
                    bill.state_desc = "审核通过";
                }
                else if (bill.state == -1)
                {
                    bill.state_desc = "审核失败";
                }
                bill.vbcode = row["VBCODE"].ToString();  
                bill.client = row["CLIENT"].ToString();  
                bill.eating = row["EATING"].ToString();  
                bill.other = row["OTHER"].ToString();  
                bill.person = row["PERSON"].ToString();  
                bill.traffic = row["TRAFFIC"].ToString();  
                bill.commission = row["COMMISSION"].ToString();  
                bill.remark = row["BLANK_STR_1"].ToString();  
                bill.opinion = row["BLANK_STR_2"].ToString();  
                bills.Add(bill);
            }
           // result.list = bills;
           // result.page = curPage;
            return bills;
        }
        
    }
}
